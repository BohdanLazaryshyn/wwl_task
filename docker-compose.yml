version: "3"
services:
  app:
    container_name: app
    build:
      context: .
    command: >
         sh -c "python manage.py wait_for_db &&
               python manage.py migrate &&
               python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - ./.env
    depends_on:
      - db

  db:
    image: postgres:15-alpine
    restart: always
    env_file:
      - ./.env
    ports:
      - "5432:5432"

  redis:
    image: "redis:alpine"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
    command: "celery -A wwl_task worker -l info"
    volumes:
      - ./:/app
    depends_on:
      - app
      - redis
    restart: on-failure
    env_file:
      - .env

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "python manage.py wait_for_db &&
             celery -A wwl_task beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./:/app
    depends_on:
      - celery
      - redis
    restart: on-failure
    env_file:
      - .env